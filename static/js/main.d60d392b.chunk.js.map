{"version":3,"sources":["Components/TodoContainer.js","Styles/GlobalStyles.js","Components/Header.js","Context/Context.js","Components/Item.js","Components/List.js","Components/Create.js","Components/App.js","index.js"],"names":["TodoContainerBox","styled","div","TodoContainer","children","GlobalStyles","createGlobalStyle","reset","HeaderBox","header","Header","initalTodoItems","listReducer","state","action","type","concat","todo","map","id","done","filter","Error","ListStateContext","createContext","ListDispatchContext","ListNextIdContext","ListProvider","useReducer","dispatch","nextId","useRef","Provider","value","useListDispatch","context","useContext","Remove","CheckCircle","Text","props","css","ItemBox","Item","text","onClick","className","ListContainer","ul","List","todos","useListState","key","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","React","memo","useState","setOpen","setValue","useListNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d60d392b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoContainerBox = styled.div`\n    background: #242326;\n    width: 512px;\n    height: 976px;\n    margin: 0 auto;\n    padding: 0;\n    border-radius: 17px;\n    box-shadow: 0 0 10px rgba(38, 37, 40, 0.375);\n    \n    display: flex;\n    flex-direction: column;\n    \n    position: relative;\n`;\n\nfunction TodoContainer({children}) {\n    return (\n        <TodoContainerBox>{children}</TodoContainerBox>\n    )\n}\n\nexport default TodoContainer;","import {createGlobalStyle} from 'styled-components';\nimport reset from \"styled-reset\";\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n     * {\n        box-sizing:border-box;\n    }\n    body {\n        background: #dee2e6;\n        font-size:14px;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        padding-top: 100px;\n        background: #E21947;\n    }\n`;\n\nexport default GlobalStyles;","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBox = styled.header`\n    padding: 28px 32px;\n    display: flex;\n    align-items: center;\n    h1 {\n        margin: 0;\n        font-size: 36px;\n        color: #E31948;\n        font-weight: 700;\n    }\n`;\n\nfunction Header(){\n    return (\n        <HeaderBox>\n            <h1>Today</h1>\n        </HeaderBox>\n    )\n}\n\nexport default Header;","import React, {useReducer, createContext, useContext, useRef} from 'react';\n\nconst initalTodoItems = [];\n\nfunction listReducer(state, action){\n    switch (action.type){\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(\n                todo => todo.id === action.id ? {...todo, done: !todo.done} : todo\n            );\n        case 'REMOVE':\n            return state.filter(todo => todo.id !== action.id);\n        default:\n            throw new Error(`에러가 발생했습니다. ${action.type}`)\n    }\n}\n\nconst ListStateContext = createContext();\nconst ListDispatchContext = createContext();\nconst ListNextIdContext = createContext();\n\nexport function ListProvider({children}){\n    const [state, dispatch] = useReducer(listReducer, initalTodoItems);\n    const nextId = useRef(5);\n    return (\n        <ListStateContext.Provider value={state}>\n            <ListDispatchContext.Provider value={dispatch}>\n                <ListNextIdContext.Provider value={nextId}>\n                    {children}\n                </ListNextIdContext.Provider>\n            </ListDispatchContext.Provider>\n        </ListStateContext.Provider>\n    );\n}\n\nexport function useListState(){\n    const context = useContext(ListStateContext);\n    if(!context){\n        throw new Error('Error!');\n    }\n    return context;\n}\n\nexport function useListDispatch(){\n    const context = useContext(ListDispatchContext);\n    if(!context){\n        throw new Error('Error!');\n    }\n    return context;\n}\n\nexport function useListNextId(){\n    const context = useContext(ListNextIdContext);\n    if(!context){\n        throw new Error('Error!');\n    }\n    return context;\n}\n","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport {useListDispatch} from \"../Context/Context\";\n\n\nconst Remove = styled.div`\n    opacity: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #AB183B;\n    font-size: 24px;\n    cursor: pointer;\n    &:hover {\n        color: #ff6b6b;\n    }\n    .done {\n        display: block;\n    }\n    .removes{\n      display: none;\n    }\n`;\nconst CheckCircle = styled.div`\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: #AB183B;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n    cursor: pointer;\n`;\nconst Text = styled.div`\n    flex:1;\n    font-size: 21px;\n    color: #DCDCDC;\n    ${ props=>props.done && css`\n        color: #9E9EA0;\n        text-decoration: line-through;\n    `}\n`;\nconst ItemBox = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0;\n    height: 48px;\n    &:hover {\n        ${Remove}{\n            .done {\n              display: none;\n            }\n            .removes{\n              display: block;\n            }\n        }\n    }\n`;\n\nfunction Item({id, done, text}){\n    const dispatch = useListDispatch();\n    const onToggle = () => dispatch({\n        type: 'TOGGLE',\n        id\n    });\n    const onRemove = () => dispatch({\n        type: 'REMOVE',\n        id\n    });\n    return (\n        <ItemBox>\n            <CheckCircle done={done} onClick={onToggle}/>\n            <Text done={done}>{text}</Text>\n            <Remove onClick={onRemove}>\n                {done && <MdDone className=\"done\" />}\n                <MdDelete className=\"removes\" />\n            </Remove>\n        </ItemBox>\n    )\n\n}\n\nexport default Item;","import React from 'react';\nimport styled from 'styled-components';\nimport Item from \"./Item\";\nimport {useListState} from \"../Context/Context\";\n\nconst ListContainer = styled.ul`\n    flex: 1;\n    padding: 15px 10px;\n    overflow-y: auto;\n`;\n\nfunction List() {\n    const todos = useListState();\n    return (\n        <ListContainer>\n            {todos.map(\n                todo=><Item\n                    key={todo.id}\n                    id={todo.id}\n                    text={todo.text}\n                    done={todo.done}\n                />\n            )}\n        </ListContainer>\n    )\n}\n\nexport default List;","import React, {useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {MdAdd} from 'react-icons/md';\nimport {useListDispatch, useListNextId} from \"../Context/Context\";\n\n\n\nconst CircleButton = styled.button`\n    background: #E31A48;\n    &:hover{\n        background: #f31c48;\n    }\n    &:active{\n        background: #c31948;\n    }\n    \n    z-index: 5;\n    cursor: pointer;\n    width: 80px;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    position: absolute;\n    left: 50%;\n    bottom: 20px;\n    transform: translate(-50%, 0);\n    \n    font-size: 60px;\n    color: #262628;\n    border-radius: 40px;\n    \n    border: none;\n    outline: none;\n    transition: 0.125s all ease-in;\n    ${props => props.open && css`\n        background: #ff6b6b;\n        &:hover {\n          background: #ff8787;\n        }\n        &:active {\n            background: #fa5252;\n        }\n        transform: translate(-50%, 0) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n    width: 100%;\n    bottom:0;\n    left: 0;\n    position: absolute;\n`;\n\n\nconst InsertForm = styled.form`\n    background: #242226;\n    padding: 32px 32px 152px;\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n`;\n\nconst Input = styled.input`\n    padding: 12px;\n    border-radius: 4px;\n    border: 1px solid #dee2e6;\n    width: 100%;\n    outline: none;\n    font-size: 18px;\n    box-sizing: border-box;\n`;\n\nfunction Create(){\n    const [open, setOpen] = useState(false);\n    const [value, setValue] = useState('');\n    const dispatch = useListDispatch();\n    const nextId = useListNextId();\n\n    const onToggle = () => setOpen(!open);\n    const onChange = e => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId.current,\n                text: value,\n                done: false\n            }\n        });\n        setValue('');\n        setOpen(false);\n        nextId.current += 1;\n    };\n\n    return(\n        <>\n            {open && (\n                <InsertFormPositioner>\n                    <InsertForm onSubmit={onSubmit}>\n                        <Input placeholder=\"할 일을 입력 후, Enter 를 누르세요\" autoFocus onChange={onChange} value={value} />\n                    </InsertForm>\n                </InsertFormPositioner>\n            )}\n            <CircleButton onClick={onToggle} open={open} >\n                <MdAdd/>\n            </CircleButton>\n        </>\n    )\n\n}\n\nexport default React.memo(Create);","import React from 'react';\nimport TodoContainer from \"./TodoContainer\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport Header from \"./Header\";\nimport List from \"./List\";\nimport Create from \"./Create\";\nimport {ListProvider} from '../Context/Context';\n\nfunction App() {\n  return (\n      <ListProvider>\n        <GlobalStyles />\n        <TodoContainer>\n            <Header/>\n            <List/>\n            <Create/>\n        </TodoContainer>\n      </ListProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}